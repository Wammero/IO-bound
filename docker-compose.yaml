version: '3.9'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  zookeeper:
    image: zookeeper:3.7
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "2181:2181"
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181  # Соединение с Zookeeper
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL: 'PLAINTEXT'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_LOG_DIRS: '/var/lib/kafka/data'
      KAFKA_LOG_RETENTION_MS: '86400000'  # 1 день для хранения логов
    volumes:
      - kafka-data:/var/lib/kafka/data
    restart: unless-stopped

  api:
    build:
      context: ./api
    container_name: api
    depends_on:
      - kafka
      - postgres
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: myuser
      DATABASE_PASSWORD: mypassword
      DATABASE_NAME: mydb
      KAFKA_BROKERS: kafka:9092
      KAFKA_TOPIC: tasks-topic
      KAFKA_GROUP_ID: task-group
    ports:
      - "8080:8080"
    restart: unless-stopped

  worker:
    build:
      context: ./worker
    container_name: worker
    depends_on:
      - kafka
      - postgres
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: myuser
      DATABASE_PASSWORD: mypassword
      DATABASE_NAME: mydb
      KAFKA_BROKERS: kafka:9092
      KAFKA_TOPIC: tasks-topic
      KAFKA_GROUP_ID: task-group
      WORKER_NUM_WORKERS: 5
    restart: unless-stopped

volumes:
  pgdata:
  kafka-data:
